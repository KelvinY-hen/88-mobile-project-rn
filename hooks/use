import { useMutation } from '@apollo/client';
import { REGISTER_MUTATION } from '../constants/GraphQLQuery';

export const useAuth = () => {
  const [registerMutation, { error, loading, data }] = useMutation(REGISTER_MUTATION);

  const register = async (variables: any, setLoading: any) => {
    setLoading(true);
    try {
      await registerMutation({
        variables: {
          input: {
            mobile_number: variables.mobile_number,
            password: variables.password,
            password_confirmation: variables.password_confirmation,
          },
        },
        onCompleted: (infoData) => {
          console.log(infoData); // Handle success
          setLoading(false);
          alert('Check Your Emails!');
        },
        onError: ({ graphQLErrors, networkError }) => {
          if (graphQLErrors) {
            graphQLErrors.forEach(({ message }) => {
              alert(`Registration failed: ${message}`);
            });
          }
          if (networkError) console.log(networkError);
          setLoading(false); // Handle error
        },
      });
    } catch (err) {
      console.error(err);
      setLoading(false);
    }
  };

  return { 
    register,
    error,
    loading,
    data, 
    };
};
